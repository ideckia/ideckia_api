package;

using api.IdeckiaApi;

typedef Props = {
	@:editable("Property description", "default value", ["possible", "values", "for the property"])
	var property_name:String;
}

@:name("::name::")
@:description("::description::")
class ::className:: extends IdeckiaAction {
	override public function init(initialState:ItemState):js.lib.Promise<ItemState>
		return super.init(initialState);
        
	override public function hide():Void {}

	public function execute(currentState:ItemState):js.lib.Promise<ActionOutcome> {
		// return new js.lib.Promise((resolve, reject) -> resolve(new ActionOutcome({state: currentState})));
		throw new haxe.exceptions.NotImplementedException();
	}
    
    override public function onLongPress(currentState:ItemState):js.lib.Promise<ActionOutcome>
		return super.onLongPress(currentState);

	// AUTOGENERATED
	/*
		var props:Props;
		var server:IdeckiaServer;

		public function setup(props:Any, ?server:IdeckiaServer) {
			this.props = props;
			this.server = server;
		}

		public function getActionDescriptor():ActionDescriptor {
			return {
				name : "::name::",
				description : "::description::",
				props : [{
					name : "property_name",
					defaultValue: "default value",
					type: "String",
					value: "possible",
					isShared: false,
					description : "property description",
					values : ["possible", "values", "for the property"]
				}]
			};
		}
	 */
}
